{"version":3,"sources":["App.js","Gauge.js","index.js"],"names":["circleConfig","Component","Gauge","props","handleProgressRange","e","v","target","value","p","toString","temp","setState","progress","progressRange","handleThresholdRange","t","threshold","thresholdRange","handleSize","s","size","state","style","width","this","Fragment","className","viewBox","cx","cy","r","fill","stroke","strokeDasharray","strokeDashoffset","stroke-opacity","class","x","y","type","min","max","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAIMA,G,KACK,aADLA,EAED,KAFCA,EAIG,oBCJHA,GDQYC,YCPP,aADLD,EAED,KAFCA,EAIG,oBAkHME,E,kDA9GX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYZC,oBAAsB,SAACC,GACrB,IAAIC,EAAID,EAAEE,OAAOC,MAEbC,EAAI,KADRH,EAAI,IAAMA,GAEVA,EAAIA,EAAEI,WAEN,IAAIC,GADJF,EAAIA,EAAEC,YACS,IAAMJ,EACrB,EAAKM,SAAS,CAAEC,SAAUJ,IAC1B,EAAKG,SAAS,CAAEE,cAAeH,KArBZ,EAwBrBI,qBAAuB,SAACV,GACtB,IAAIC,EAAID,EAAEE,OAAOC,MAEbQ,EAAI,KADRV,EAAI,IAAMA,GAEVA,EAAIA,EAAEI,WAEN,IAAIC,GADJK,EAAIA,EAAEN,YACS,IAAMJ,EACrB,EAAKM,SAAS,CAAEK,UAAWD,IAC3B,EAAKJ,SAAS,CAAEM,eAAgBP,KAhCb,EAmCrBQ,WAAW,SAACd,GACV,IAAIe,EAAEf,EAAEE,OAAOC,MACf,EAAKI,SAAS,CAAEQ,EAAEA,IAElB,IAAIT,GADJS,EAAEA,EAAEV,YACO,MACX,EAAKE,SAAS,CAAES,KAAKV,KAtCjB,EAAKW,MAAQ,CACXR,cAAe,QACfD,SAAU,EAAKV,MAAMU,SACrBK,eAAgB,EAAKf,MAAMc,UAAY,MACvCA,UAAW,EAAKd,MAAMc,UACtBI,KAAK,QACLD,EAAE,IARW,E,qDA2CX,IAEFG,EAAM,CACVC,MAFaC,KAAKH,MAAbD,MAIP,OACE,cAAC,IAAMK,SAAP,UACE,sBAAKC,UAAU,YAAf,UACE,4EACA,wBAAQA,UAAU,SAASJ,MAAOA,EAAlC,SACE,sBAAKK,QAAS5B,EAAd,UACE,wBACE2B,UAAU,OACVE,GAAI7B,EACJ8B,GAAI9B,EACJ+B,EAAG/B,EACHgC,KAAK,cACLC,OAAO,SAGT,wBACEN,UAAU,OACVE,GAAI7B,EACJ8B,GAAI9B,EACJ+B,EAAG/B,EACHgC,KAAK,cACLC,OAAO,UACPC,gBAAiBT,KAAKH,MAAMJ,eAC5BiB,iBAAiB,KACjBC,iBAAe,QAGjB,wBACEC,MAAM,kBACNV,UAAU,OACVE,GAAI7B,EACJ8B,GAAI9B,EACJ+B,EAAG/B,EACHgC,KAAK,cACLC,OAAO,UACPC,gBAAiBT,KAAKH,MAAMR,cAC5BqB,iBAAiB,OAInB,oBAAGR,UAAU,eAAb,UACE,uBAAMW,EAAE,MAAMC,EAAE,MAAMZ,UAAU,oBAAhC,UACGF,KAAKH,MAAMT,SADd,OAGA,sBAAMyB,EAAE,MAAMC,EAAE,MAAMZ,UAAU,cAAhC,8BAMN,yCACA,uBAAOa,KAAK,QAAQhC,MAAOiB,KAAKH,MAAMT,SAAU4B,IAAI,IAAIC,IAAI,MAAMC,SAAUlB,KAAKrB,oBAAqBiC,MAAM,WAC5G,0CACA,uBAAOG,KAAK,QAAQhC,MAAOiB,KAAKH,MAAML,UAAWwB,IAAI,IAAIC,IAAI,MAAMC,SAAUlB,KAAKV,qBAAsBsB,MAAM,WAC9G,qCACA,uBAAOG,KAAK,QAAQhC,MAAOiB,KAAKH,MAAMF,EAAGqB,IAAI,KAAKC,IAAI,KAAKC,SAAUlB,KAAKN,WAAYkB,MAAM,oB,GAxGlFpC,aCLpB2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAOjC,SAAU,GAAII,UAAW,OAElC8B,SAASC,eAAe,U","file":"static/js/main.39e24e68.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Gauge.css';\r\n\r\n\r\nconst circleConfig = {\r\n  viewBox: '0 0 38 38',\r\n  x: '19',\r\n  y: '19',\r\n  ratio: '15.91549430918954'\r\n};\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      progressRange: \"25 75\",\r\n      progress: 25,\r\n      thresholdRange: \"25 75\",\r\n      threshold: 25,\r\n      size:\"10rem\",\r\n      s:10\r\n    }\r\n  }\r\n  \r\n  handleProgressRange = (e) => {\r\n    let v = e.target.value;\r\n    v = 100 - v;\r\n    let p = 100 - v;\r\n    v = v.toString();\r\n    p = p.toString();\r\n    let temp = p + \" \" + v;\r\n    this.setState({ progress: p });\r\n    this.setState({ progressRange: temp });\r\n  }\r\n\r\n  handleThresholdRange = (e) => {\r\n    let v = e.target.value;\r\n    v = 100 - v;\r\n    let t = 100 - v;\r\n    v = v.toString();\r\n    t = t.toString();\r\n    let temp = t + \" \" + v;\r\n    this.setState({ threshold: t });\r\n    this.setState({ thresholdRange: temp });\r\n  }\r\n\r\n  handleSize=(e)=>{\r\n    let s=e.target.value;\r\n    this.setState({ s:s  });\r\n    s=s.toString();\r\n    let temp=s+\"rem\";\r\n    this.setState({ size:temp  });\r\n  }\r\n  render() {\r\n    const {size} = this.state;\r\n    const style={\r\n      width:size,\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <h1>Custom Component: Progress Indicator Gauge</h1>\r\n          <figure className=\"figure\" style={style}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n              <circle\r\n                className=\"ring\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.x}\r\n                r={circleConfig.ratio}\r\n                fill=\"transparent\"\r\n                stroke=\"gray\"\r\n              />\r\n\r\n              <circle\r\n                className=\"path\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.x}\r\n                r={circleConfig.ratio}\r\n                fill=\"transparent\"\r\n                stroke=\"#e6e6e6\"\r\n                strokeDasharray={this.state.thresholdRange}\r\n                strokeDashoffset=\"25\"\r\n                stroke-opacity=\"0.3\"\r\n\r\n              />\r\n              <circle\r\n                class=\"progress-circle\"\r\n                className=\"path\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.x}\r\n                r={circleConfig.ratio}\r\n                fill=\"transparent\"\r\n                stroke=\"#34308F\"\r\n                strokeDasharray={this.state.progressRange}\r\n                strokeDashoffset=\"25\"\r\n              />\r\n\r\n                  \r\n              <g className=\"circle-label\">\r\n                <text x=\"50%\" y=\"50%\" className=\"circle-percentage\">\r\n                  {this.state.progress}%\r\n          </text>\r\n                <text x=\"50%\" y=\"50%\" className=\"circle-text\">\r\n                  COMPLETE\r\n          </text>\r\n              </g>\r\n            </svg>\r\n          </figure>\r\n          <p>Progress</p>\r\n          <input type=\"range\" value={this.state.progress} min=\"0\" max=\"100\" onChange={this.handleProgressRange} class=\"slider\"></input>\r\n          <p>Threshold</p>\r\n          <input type=\"range\" value={this.state.threshold} min=\"0\" max=\"100\" onChange={this.handleThresholdRange} class=\"slider\"></input>\r\n          <p>Size</p>\r\n          <input type=\"range\" value={this.state.s} min=\"10\" max=\"30\" onChange={this.handleSize} class=\"slider\"></input>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Gauge.css';\r\n\r\n\r\nconst circleConfig = {\r\n  viewBox: '0 0 38 38',\r\n  x: '19',\r\n  y: '19',\r\n  ratio: '15.91549430918954'\r\n};\r\n\r\nclass Gauge extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          progressRange: \"25 75\",\r\n          progress: this.props.progress,\r\n          thresholdRange: this.props.threshold + \" 75\",\r\n          threshold: this.props.threshold,\r\n          size:\"10rem\",\r\n          s:10\r\n        }\r\n      }\r\n      \r\n  \r\n  handleProgressRange = (e) => {\r\n    let v = e.target.value;\r\n    v = 100 - v;\r\n    let p = 100 - v;\r\n    v = v.toString();\r\n    p = p.toString();\r\n    let temp = p + \" \" + v;\r\n    this.setState({ progress: p });\r\n    this.setState({ progressRange: temp });\r\n  }\r\n\r\n  handleThresholdRange = (e) => {\r\n    let v = e.target.value;\r\n    v = 100 - v;\r\n    let t = 100 - v;\r\n    v = v.toString();\r\n    t = t.toString();\r\n    let temp = t + \" \" + v;\r\n    this.setState({ threshold: t });\r\n    this.setState({ thresholdRange: temp });\r\n  }\r\n\r\n  handleSize=(e)=>{\r\n    let s=e.target.value;\r\n    this.setState({ s:s  });\r\n    s=s.toString();\r\n    let temp=s+\"rem\";\r\n    this.setState({ size:temp  });\r\n  }\r\n\r\n  render() {\r\n    const {size} = this.state;\r\n    const style={\r\n      width:size,\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <h1>Custom Component: Progress Indicator Gauge</h1>\r\n          <figure className=\"figure\" style={style}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n              <circle\r\n                className=\"ring\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.x}\r\n                r={circleConfig.ratio}\r\n                fill=\"transparent\"\r\n                stroke=\"gray\"\r\n              />\r\n\r\n              <circle\r\n                className=\"path\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.x}\r\n                r={circleConfig.ratio}\r\n                fill=\"transparent\"\r\n                stroke=\"#e6e6e6\"\r\n                strokeDasharray={this.state.thresholdRange}\r\n                strokeDashoffset=\"25\"\r\n                stroke-opacity=\"0.8\"\r\n\r\n              />\r\n              <circle\r\n                class=\"progress-circle\"\r\n                className=\"path\"\r\n                cx={circleConfig.x}\r\n                cy={circleConfig.x}\r\n                r={circleConfig.ratio}\r\n                fill=\"transparent\"\r\n                stroke=\"#34308F\"\r\n                strokeDasharray={this.state.progressRange}\r\n                strokeDashoffset=\"25\"\r\n              />\r\n\r\n                  \r\n              <g className=\"circle-label\">\r\n                <text x=\"50%\" y=\"50%\" className=\"circle-percentage\">\r\n                  {this.state.progress}%\r\n          </text>\r\n                <text x=\"50%\" y=\"50%\" className=\"circle-text\">\r\n                  COMPLETE\r\n          </text>\r\n              </g>\r\n            </svg>\r\n          </figure>\r\n          <p>Progress</p>\r\n          <input type=\"range\" value={this.state.progress} min=\"0\" max=\"100\" onChange={this.handleProgressRange} class=\"slider\"></input>\r\n          <p>Threshold</p>\r\n          <input type=\"range\" value={this.state.threshold} min=\"0\" max=\"100\" onChange={this.handleThresholdRange} class=\"slider\"></input>\r\n          <p>Size</p>\r\n          <input type=\"range\" value={this.state.s} min=\"10\" max=\"30\" onChange={this.handleSize} class=\"slider\"></input>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gauge","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Gauge from './Gauge';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Gauge progress={25} threshold={75} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}